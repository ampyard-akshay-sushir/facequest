openapi: 3.0.1
info:
  title: FaceQuest API
  description: >-
    FaceQuest is a simple and developer-friendly FRaaS (Face Recognition as a
    Service).  You can find out more about FaceQuest at
    [https://facequest.io](https://facequest.io).
  termsOfService: 'https://facequest.io/terms-of-use'
  contact:
    email: support@facequest.io
  version: '1.0'
externalDocs:
  description: Find out more about FaceQuest
  url: 'https://facequest.io'
servers:
  - url: 'https://verifyapi.facequest.io/api/v1'
security:
  - Secret: []
    Email: []
    Constant-Authorization-Token: []
tags:
  - name: face-verification
    description: 'APIs for FaceQuest''s 1:1 Face verification'
paths:
  /verification/logs:
    get:
      tags:
        - face-verification
      summary: Fetch verification logs
      operationId: getVerificationLogs
      x-codeSamples:
        - lang: Shell
          source: |
            curl -X GET 'https://verifyapi.facequest.io/api/v1/verification/logs' \
            -H 'secret: secret_that_i_set_in_facequest_web_ui' \
            -H 'email: email_id_registered_with_facequest' \
            -H 'accept: application/json' \
            -H 'authorizationtoken: bearer' \
            --compressed
      responses:
        '200':
          description: Fetch successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/Page'
                  _embedded:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationLog'
      parameters: []
  /verification/uploadurl:
    get:
      tags:
        - face-verification
      summary: Fetch upload URLs
      description: Returns pre-signed URLs to upload reference face file and the file to be validated
      operationId: getUploadUrl
      x-codeSamples:
        - lang: Shell
          source: |
            curl -X GET 'https://verifyapi.facequest.io/api/v1/verification/uploadurl' \
            -H 'secret: secret_that_i_set_in_facequest_web_ui' \
            -H 'email: email_id_registered_with_facequest' \
            -H 'accept: application/json' \
            -H 'authorizationtoken: bearer' \
            --compressed
      responses:
        '200':
          description: Fetch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadUrlResponse'
        '403':
          description: Unauthorized.  This can be either due to insufficient credits or invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  errorMessage:
                    type: string
                    description: >-
                      An explanation of the error
      parameters: []
  /verification:
    post:
      tags:
        - face-verification
      summary: Creates verification request
      description: Creates a new verification request.  The progress of this request can be tracked asynchronously.
      operationId: verifyFaces
      x-codeSamples:
        - lang: Shell
          source: |
            curl -X POST 'https://verifyapi.facequest.io/api/v1/verification' \
            -H 'secret: secret_that_i_set_in_facequest_web_ui' \
            -H 'email: email_id_registered_with_facequest' \
            -H 'accept: application/json' \
            -H 'authorizationtoken: bearer' \
            --compressed
      requestBody:
        description: Request body to be sent to initiate verification request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
      responses:
        '200':
          description: Successfully created face verification request
          content:
            application/json:
              schema:
                type: object
                properties:
                  verificationRequestId:
                    type: string
                    format: uuid
        '403':
          description: Unauthorized.  This can be either due to insufficient credits or invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  errorMessage:
                    type: string
                    description: >-
                      An explanation of the error

  /verification/{verificationRequestId}:
    get:
      tags:
        - face-verification
      summary: Track verification request
      description: Track any verification request using `verificationRequestId`, returned upon invoking `POST` request at URL `/api/v1/verification`
      parameters:
        - name: verificationRequestId
          in: path
          description: UUID of the verification request to fetch
          required: true
          schema:
            type: string
            format: uuid
      operationId: getVerificationStatus
      x-codeSamples:
        - lang: Shell
          source: |
            curl -X GET 'https://verifyapi.facequest.io/api/v1/verification/{verificationRequestId}' \
            -H 'secret: secret_that_i_set_in_facequest_web_ui' \
            -H 'email: email_id_registered_with_facequest' \
            -H 'accept: application/json' \
            -H 'authorizationtoken: bearer' \
            --compressed
      responses:
        '200':
          description: Fetch successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationLog'
components:
  schemas:
    UploadUrlResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            referenceFace:
              type: object
              properties:
                uploadUrl:
                  type: string
                  format: uri
                filePath:
                  type: string
            faceToBeValidated:
              type: object
              properties:
                uploadUrl:
                  type: string
                  format: uri
                filePath:
                  type: string
        errorMessage:
          type: string
    VerificationRequest:
      type: object
      required:
        - referenceFaceFilePath
        - givenFaceFilePath
      properties:
        title:
          type: string
          description: Optional title for the request.  This will be returned along
            with the verification logs. Only JPG/PNG images are supported.
          required: false
        notes:
          type: string
          description: Optional notes for your use.  This will be returned along
            with the verification logs.
          required: false
        referenceFaceFilePath:
          type: string
          description: Value of `referenceFace.filePath` of the response returned upon invoking `/api/v1/verification/uploadurl`
          required: true
        givenFaceFilePath:
          type: string
          description: Value of `faceToBeValidated.filePath` of the response returned upon invoking `/api/v1/verification/uploadurl`
          required: true

    VerificationLog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426655440000
        result:
          type: string
          enum:
            - FAILED_NEED_HUMAN_REVIEW
            - ERROR
            - SUCCESS
        matchPercentage:
          type: number
          format: double
          example: 89.34
        title:
          type: string
          example: Verification for User 346
          description: Optional title specified in the request
        notes:
          type: string
          example: This is a request to verify user 346
        errorMessage:
          type: string
          example: More than one faces found in reference picture
          description: >-
            An explanation of the error if verification process could not be
            finished.  Relevant when result is ERROR
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
    Page:
      type: object
      properties:
        totalElements:
          type: integer
          example: 1
  securitySchemes:
    Email:
      type: apiKey
      description: Email registered with FaceQuest
      name: email
      in: header
    Secret:
      type: apiKey
      description: FaceQuest API secret key that you set from FaceQuest Web UI (https://app.facequest.io/#/accountsettings)
      name: secret
      in: header
    Constant-Authorization-Token:
      type: apiKey
      description: A constant value `bearer` for all requests issued via API
      name: authorizationtoken
      in: header
  links: {}
  callbacks: {}
